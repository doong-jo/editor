$editor-button-color: #5f80de;
$editor-line-color: rgba($editor-button-color, 0.3);
$editor-resizer-width: 8px;
$editor-canvas-background-color: rgba(236, 236, 236, 0.3);
$editor-ruler-size: 20px;

.horizontal-ruler {
  position: absolute;
  top: 0px;
  left: $editor-ruler-size;
  right: 0px;
  height: $editor-ruler-size;
  background-color: var(--elf--background-color);
  z-index: 0;

  .horizontal-ruler-container {
    position: absolute;
    left:0px;
    top:0px;
    height: 100%;
    width: 100%;
  }  
  svg {
    text {
      text-anchor: middle;
      fill: var(--elf--font-color); 
      font-size: 8px;
    }
  }
}

.vertical-ruler {
  position: absolute;
  left: 0px;
  width: $editor-ruler-size;
  top: $editor-ruler-size;
  bottom: 0px;
  background-color: var(--elf--background-color);
  box-sizing: border-box;
  z-index: 0;  

  .vertical-ruler-container {
    position: absolute;
    left:0px;
    top:0px;
    height: 100%;
    width: 100%;
  }

  svg {
    text {
      text-anchor: middle;
      fill: var(--elf--font-color); 
      font-size: 8px;
    }
  }
}

.player {
  .page-container {
    top: 0px;  
    left: 0px;    
  }
}

.page-container {
  position: absolute;
  top: $editor-ruler-size;  
  left: $editor-ruler-size;
  right: 0px;
  bottom: 0px;
  pointer-events: all;
  outline: none;
  background-color: white; 
  touch-action: pinch-zoom;
  z-index: 1;
}


.page-view {
  position: absolute;
  left: 0px;
  right: 0px;
  bottom: 0px;
  top: 0px;
  background-color: var(--elf--page-view-color);

  .page-lock {
    position: absolute;
    left: 0px;
    right: 0px;
    bottom: 0px;
    top: 0px;
    overflow: hidden;

    .element-view {   

      position: absolute;
      left: 0px;
      top: 0px;
      outline: none;
      // background-color: yellow;

      &[data-mode='ADD'] {
        cursor: crosshair;
      }
    }
  }

}



.page-tools {
  position: absolute;
  left: 20px;
  bottom: 10px;
  display: inline-block;
  padding: 5px 10px;
  border-radius: 3px;
  border: 1px solid var(--elf--border-color);
  color: var(--elf--font-color);
  background-color: var(--elf--background-color);
  box-sizing: border-box;

  > * {
    position: relative;
    display: inline-block;
  }

  >label {
    vertical-align: middle;
    font-size: 11px;
    display: inline-block;
    height: 100%;
    padding-top: 5px;
  }

  button {
    border-radius: 3px;
    vertical-align: middle;
    display: inline-block;
    padding: 4px;
    width: 24px;
    height: 24px;

    &.on {
      background-color: var(--elf--selected-color);
    }

    svg {
      pointer-events: none;
    }
  }

  >.select {
    display: inline-block;
    width: 50px;
    border-radius: 5px;
    border:1px solid rgba(var(--elf--selected-color), 0.5);
  }
}

.page-subeditor {
  position: absolute;
  left: 0px;
  top: 0px;
  right: 0px;
  bottom: 0px;
  // height: 35px;
  // text-align: center; 
  font-size: 12px;
  pointer-events: none;
}

@import './sub-editor/path-manager.scss';
@import './sub-editor/draw-manager.scss';
@import './rotate-editor-view.scss';

.drag-area-rect {
  pointer-events: none;
  position: absolute;
  border: 0.5px solid var(--elf--drag-area-rect-border-color);
  background-color: var(--elf--drag-area-rect-background-color);
  box-sizing: border-box;

  left: -10000px;
}

.canvas-view {
  position: absolute;
  transform-origin: left top;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  // background-color: rgba(255, 122, 0, 0.5);
  will-change: auto;

  svg.element-item {
    pointer-events: none;

    >* {
      pointer-events: stroke;
    }

    > :not([fill='transparent']) {
      pointer-events: visible;
    }
  }

  .element-item {
    &[contenteditable="true"] {
      // margin: 0px;
      outline: none;
    }

    [contenteditable="true"] {
      // margin: 0px;
      outline: none;
    }    

    &[tabIndex] {
      outline: none;
    }    

    &.artboard {
      box-shadow: 0 8px 6px -6px black;      
    }

    > svg {

      &:hover {
        > path{
          stroke: rgb(64, 64, 252);
        }

        > text {
          fill: rgb(64, 64, 252);
        }
      }
    }    
  }
}